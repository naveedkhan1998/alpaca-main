{{- if .Values.postgres.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "alpaca-main.fullname" . }}-postgres
  labels:
    {{- include "alpaca-main.labels" . | nindent 4 }}
    app.kubernetes.io/component: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "alpaca-main.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: postgres
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "alpaca-main.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: postgres
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "alpaca-main.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: postgres
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}"
          imagePullPolicy: {{ .Values.postgres.image.pullPolicy }}
          env:
            - name: POSTGRES_DB
              value: {{ .Values.postgres.auth.database | quote }}
            - name: POSTGRES_USER
              value: {{ .Values.postgres.auth.username | quote }}
            - name: POSTGRES_PASSWORD
              {{- if .Values.secrets.enabled }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "alpaca-main.fullname" . }}-secrets
                  key: POSTGRES_PASSWORD
              {{- else }}
              value: {{ .Values.postgres.auth.password | quote }}
              {{- end }}
          ports:
            - name: postgres
              containerPort: {{ .Values.postgres.service.port }}
              protocol: TCP
          {{- if .Values.postgres.persistence.enabled }}
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- if .Values.postgres.persistence.enabled }}
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: {{ include "alpaca-main.fullname" . }}-postgres-pvc
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end -}}
