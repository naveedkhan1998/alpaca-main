services:
  postgres:
    image: postgres:16.0
    container_name: alpaca-postgres
    env_file:
      - ./.envs/.env
    volumes:
      - ./postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.2.4-alpine
    container_name: alpaca-redis
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: backend/
      dockerfile: Dockerfile.dev
    container_name: alpaca-backend
    image: naveedkhan1998/alpaca-backend
    env_file:
      - ./.envs/.env
    volumes:
      - ./backend/:/app/
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    entrypoint: ["bash", "./scripts/run_backend.sh"]

  celery-beat:
    image: naveedkhan1998/alpaca-backend
    container_name: alpaca-celery-beat
    env_file:
      - ./.envs/.env
    depends_on:
      backend:
        condition: service_started
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend/:/app/
    entrypoint: ["bash", "./scripts/run_celery_beat.sh"]
    restart: always

  celery-worker:
    image: naveedkhan1998/alpaca-backend
    container_name: alpaca-celery-worker
    env_file:
      - ./.envs/.env
    depends_on:
      backend:
        condition: service_started
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend/:/app/
    entrypoint: ["bash", "./scripts/run_celery_worker.sh"]
    restart: always

  flower:
    image: naveedkhan1998/alpaca-backend
    container_name: alpaca-flower
    volumes:
      - ./backend/:/app/
    env_file:
      - ./.envs/.env
    ports:
      - "5555:5555"
    entrypoint: celery -A main flower --loglevel=INFO
    depends_on:
      redis:
        condition: service_healthy
    restart: always

  websocket:
    image: naveedkhan1998/alpaca-backend
    container_name: alpaca-websocket
    env_file:
      - ./.envs/.env
    volumes:
      - ./backend/:/app/
    depends_on:
      backend:
        condition: service_started
      redis:
        condition: service_healthy
    entrypoint: ["bash", "./scripts/run_websocket.sh"]
    restart: always

  # pgadmin:
  #   image: dpage/pgadmin4:latest
  #   container_name: alpaca-pgadmin
  #   env_file:
  #     - ./.envs/.env
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: admin@admin.com
  #     PGADMIN_DEFAULT_PASSWORD: admin
  #   ports:
  #     - "8080:80"
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   restart: always

volumes:
  redis-data:
