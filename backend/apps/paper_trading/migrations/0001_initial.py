# Generated by Django 5.2.3 on 2025-09-26 14:17

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("core", "0006_watchlist_is_default_alter_watchlist_user"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="PaperTrade",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "direction",
                    models.CharField(
                        choices=[("LONG", "Long"), ("SHORT", "Short")],
                        default="LONG",
                        max_length=5,
                    ),
                ),
                ("quantity", models.DecimalField(decimal_places=6, max_digits=18)),
                ("entry_price", models.DecimalField(decimal_places=6, max_digits=18)),
                ("entry_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "target_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        help_text="Optional price target you want to hit for the trade.",
                        max_digits=18,
                        null=True,
                    ),
                ),
                (
                    "stop_loss",
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        help_text="Optional stop loss boundary to track against.",
                        max_digits=18,
                        null=True,
                    ),
                ),
                (
                    "take_profit",
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        help_text="Optional take profit boundary to track against.",
                        max_digits=18,
                        null=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("OPEN", "Open"),
                            ("CLOSED", "Closed"),
                            ("CANCELLED", "Cancelled"),
                        ],
                        default="OPEN",
                        max_length=10,
                    ),
                ),
                (
                    "exit_price",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=18, null=True
                    ),
                ),
                ("exit_at", models.DateTimeField(blank=True, null=True)),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "asset",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="paper_trades",
                        to="core.asset",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="paper_trades",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["user", "asset", "status"],
                        name="pt_user_asset_status_idx",
                    ),
                    models.Index(
                        fields=["asset", "entry_at"], name="pt_asset_entry_idx"
                    ),
                ],
            },
        ),
    ]
