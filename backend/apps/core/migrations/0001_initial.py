# Generated by Django 5.2.3 on 2025-07-29 17:05

import django.contrib.postgres.indexes
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AlpacaAccount",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(default="ADMIN", max_length=255)),
                ("api_key", models.CharField(default=" ", max_length=255)),
                ("api_secret", models.CharField(default=" ", max_length=255)),
                ("last_updated", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Asset",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("alpaca_id", models.CharField(max_length=255, unique=True)),
                ("symbol", models.CharField(db_index=True, max_length=50)),
                ("name", models.CharField(blank=True, max_length=500, null=True)),
                (
                    "asset_class",
                    models.CharField(
                        choices=[
                            ("us_equity", "US Equity"),
                            ("us_option", "US Option"),
                            ("crypto", "Cryptocurrency"),
                        ],
                        default="us_equity",
                        max_length=20,
                    ),
                ),
                (
                    "exchange",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("AMEX", "AMEX"),
                            ("ARCA", "ARCA"),
                            ("BATS", "BATS"),
                            ("NYSE", "NYSE"),
                            ("NASDAQ", "NASDAQ"),
                            ("NYSEARCA", "NYSEARCA"),
                            ("OTC", "OTC"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("active", "Active"), ("inactive", "Inactive")],
                        default="active",
                        max_length=20,
                    ),
                ),
                ("tradable", models.BooleanField(default=False)),
                ("marginable", models.BooleanField(default=False)),
                ("shortable", models.BooleanField(default=False)),
                ("easy_to_borrow", models.BooleanField(default=False)),
                ("fractionable", models.BooleanField(default=False)),
                (
                    "maintenance_margin_requirement",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "margin_requirement_long",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                (
                    "margin_requirement_short",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["symbol", "asset_class"],
                        name="core_asset_symbol_7c8ca0_idx",
                    ),
                    models.Index(
                        fields=["status", "tradable"],
                        name="core_asset_status_eb1892_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="WatchList",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("user", "name")},
            },
        ),
        migrations.CreateModel(
            name="Candle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("open", models.FloatField()),
                ("high", models.FloatField()),
                ("low", models.FloatField()),
                ("close", models.FloatField()),
                ("volume", models.BigIntegerField()),
                ("trade_count", models.IntegerField(blank=True, null=True)),
                ("vwap", models.FloatField(blank=True, null=True)),
                ("timeframe", models.CharField(default="1T", max_length=10)),
                ("timestamp", models.DateTimeField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "asset",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.asset"
                    ),
                ),
            ],
            options={
                "ordering": ["timestamp"],
                "indexes": [
                    models.Index(
                        fields=["asset", "timeframe", "-timestamp"],
                        name="idx_candle_asset_tf_time_desc",
                    ),
                    django.contrib.postgres.indexes.BrinIndex(
                        fields=["timestamp"], name="brin_candle_timestamp"
                    ),
                ],
                "unique_together": {("asset", "timeframe", "timestamp")},
            },
        ),
        migrations.CreateModel(
            name="Tick",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("alpaca_trade_id", models.BigIntegerField(blank=True, null=True)),
                (
                    "exchange_code",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("price", models.FloatField()),
                ("size", models.IntegerField(blank=True, null=True)),
                ("conditions", models.JSONField(blank=True, null=True)),
                ("tape", models.CharField(blank=True, max_length=10, null=True)),
                ("timestamp", models.DateTimeField()),
                ("received_at", models.DateTimeField(auto_now_add=True)),
                ("used", models.BooleanField(default=False)),
                (
                    "asset",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.asset"
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["asset", "-timestamp"],
                        name="core_tick_asset_i_f20650_idx",
                    ),
                    models.Index(
                        fields=["timestamp"], name="core_tick_timesta_36fcbb_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="WatchListAsset",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("added_at", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "asset",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.asset"
                    ),
                ),
                (
                    "watchlist",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.watchlist"
                    ),
                ),
            ],
            options={
                "unique_together": {("watchlist", "asset")},
            },
        ),
    ]
